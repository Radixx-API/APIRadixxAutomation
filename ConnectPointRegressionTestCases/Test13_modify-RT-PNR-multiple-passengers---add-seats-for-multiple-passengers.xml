<?xml version="1.0" encoding="UTF-8"?>
<con:testCase failOnError="false" failTestCaseOnErrors="true" id="8493c21b-095b-44d6-aa3c-e143256105d3" keepSession="false" maxResults="0" name="Test13_modify RT PNR multiple passengers - add seats for multiple passengers" searchProperties="true" timeout="0" wsrmAckTo="" wsrmEnabled="false" wsrmVersion="1.0" zephyrTestId="" zephyrTestName="" disabled="true" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="8493c21b-095b-44d6-aa3c-e143256105d3fileName">Test13_modify-RT-PNR-multiple-passengers---add-seats-for-multiple-passengers</con:setting>
  </con:settings>
  <con:savedRecentRuns>1</con:savedRecentRuns>
  <con:testStep id="8a587af4-05a5-4baa-9e29-b58328685b56" name="1 Create RT pnr with multiple passengers" type="calltestcase">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>3b03766b-48eb-45c4-8b15-c8e2410a9268</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>Balance</con:name>
          <con:value>14086.64</con:value>
        </con:property>
        <con:property>
          <con:name>LFID</con:name>
          <con:value>128826</con:value>
        </con:property>
        <con:property>
          <con:name>LFID_ReturnSeg</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>PNR</con:name>
          <con:value>DU8YJA</con:value>
        </con:property>
        <con:property>
          <con:name>fareid_ADT</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>fareid_CHD</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>fareid_ADT_returnSeg</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>fareid_CHD_returnSeg</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>Balance</con:entry>
        <con:entry>LFID</con:entry>
        <con:entry>LFID_ReturnSeg</con:entry>
        <con:entry>PNR</con:entry>
        <con:entry>fareid_ADT</con:entry>
        <con:entry>fareid_CHD</con:entry>
        <con:entry>fareid_ADT_returnSeg</con:entry>
        <con:entry>fareid_CHD_returnSeg</con:entry>
      </con:returnProperties>
      <con:runMode>SINGLETON_AND_WAIT</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep id="2584f21b-a559-4c28-9181-3088760588e5" name="Run [RetrieveSecurityToken]" type="calltestcase" disabled="true">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>d61b0359-0047-44f9-ace3-0959b9cd799b</con:targetTestCase>
      <con:properties/>
      <con:returnProperties/>
      <con:runMode>SINGLETON_AND_WAIT</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep id="4e92025b-9618-48a3-a838-3ad497e92c00" name="2 RetrievePNR" type="request">
    <con:settings/>
    <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:interface>BasicHttpBinding_IConnectPoint_Reservation</con:interface>
      <con:operation>RetrievePNR</con:operation>
      <con:request id="2f8df430-f174-4a2d-85f5-3d44b98555f2" incomingWss="" name="2 RetrievePNR" outgoingWss="" sslKeystore="" timeout="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://rdxappint.radixxuat.com/RDX/Radixx.Connectpoint/ConnectPoint.Reservation.svc</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/" xmlns:rad="http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Request" xmlns:rad1="http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Reservation.Request">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <tem:RetrievePNR>\r
         <!--Optional:-->\r
         <tem:RetrievePnrRequest>\r
            <rad:SecurityGUID>${#TestSuite#securityToken}</rad:SecurityGUID>\r
            <rad:CarrierCodes>\r
               <!--Zero or more repetitions:-->\r
               <rad:CarrierCode>\r
                  <rad:AccessibleCarrierCode>${#TestSuite#carriercode}</rad:AccessibleCarrierCode>\r
               </rad:CarrierCode>\r
            </rad:CarrierCodes>\r
            <!--Optional:-->\r
            <rad:ClientIPAddress xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>\r
            <!--Optional:-->\r
            <rad:HistoricUserName xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>\r
            <rad1:ActionType>GetReservation</rad1:ActionType>\r
            <rad1:ReservationInfo>\r
               <rad:SeriesNumber>299</rad:SeriesNumber>\r
               <rad:ConfirmationNumber>${1 Create RT pnr with multiple passengers#PNR}</rad:ConfirmationNumber>\r
            </rad1:ReservationInfo>\r
         </tem:RetrievePnrRequest>\r
      </tem:RetrievePNR>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
        <con:assertion id="8daeb2c3-129a-462a-a797-da2503d82d5a" name="Valid HTTP Status Codes" type="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion id="a11dd47b-9984-420a-a903-e2fb2ec1b097" name="Not SOAP Fault" type="SOAP Fault Assertion"/>
        <con:assertion id="9b7cb1d4-ffb1-4cea-a57d-5b1fd7bbb209" name="Schema Compliance" type="Schema Compliance">
          <con:configuration/>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:wsaConfig action="http://tempuri.org/IConnectPoint_Reservation/RetrievePNR" mustUnderstand="NONE" version="200508"/>
        <con:wsrmConfig version="1.2"/>
        <con:environmentSpec>
          <con:entry environmentId="ff76c282-7c43-48ac-88d6-a00107f279b7">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:request>
    </con:config>
  </con:testStep>
  <con:testStep id="acf7a4c9-a66f-43ae-ba98-2947686bcd0a" name="Transfer SeatInfo" type="transfer">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers entitize="false" failOnError="true" ignoreEmpty="false" setNullOnMissingSource="true" transferChildNodes="false" transferTextContent="true" transferToAll="false">
        <con:name>ReservationKey</con:name>
        <con:sourceType>Response</con:sourceType>
        <con:sourceStep>2 RetrievePNR</con:sourceStep>
        <con:sourcePath>declare namespace a='http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Reservation.Response';
declare namespace ns1='http://tempuri.org/';
//ns1:RetrievePNRResponse[1]/ns1:RetrievePNRResult[1]/a:Key[1]</con:sourcePath>
        <con:targetType>ReservationKey</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers entitize="false" failOnError="true" ignoreEmpty="false" setNullOnMissingSource="true" transferChildNodes="false" transferTextContent="true" transferToAll="false">
        <con:name>LogicalFlightKey</con:name>
        <con:sourceType>Response</con:sourceType>
        <con:sourceStep>2 RetrievePNR</con:sourceStep>
        <con:sourcePath>declare namespace a='http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Reservation.Response';
declare namespace ns1='http://tempuri.org/';
//ns1:RetrievePNRResponse[1]/ns1:RetrievePNRResult[1]/a:Airlines[1]/a:Airline[1]/a:LogicalFlight[1]/a:LogicalFlight[a:Origin = '${#TestSuite#Origin}']/a:Key[1]</con:sourcePath>
        <con:targetType>LogicalFlightKey</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers entitize="false" failOnError="true" ignoreEmpty="false" setNullOnMissingSource="true" transferChildNodes="false" transferTextContent="true" transferToAll="false">
        <con:name>PhysicalFlightKey</con:name>
        <con:sourceType>Response</con:sourceType>
        <con:sourceStep>2 RetrievePNR</con:sourceStep>
        <con:sourcePath>declare namespace a='http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Reservation.Response';
declare namespace ns1='http://tempuri.org/';
//ns1:RetrievePNRResponse[1]/ns1:RetrievePNRResult[1]/a:Airlines[1]/a:Airline[1]/a:LogicalFlight[1]/a:LogicalFlight[a:Origin = '${#TestSuite#Origin}']/a:PhysicalFlights[1]/a:PhysicalFlight[1]/a:Key[1]</con:sourcePath>
        <con:targetType>PhysicalFlightKey</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers entitize="false" failOnError="true" ignoreEmpty="false" setNullOnMissingSource="true" transferChildNodes="false" transferTextContent="true" transferToAll="false">
        <con:name>CustomerKey</con:name>
        <con:sourceType>Response</con:sourceType>
        <con:sourceStep>2 RetrievePNR</con:sourceStep>
        <con:sourcePath>declare namespace a='http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Reservation.Response';
declare namespace ns1='http://tempuri.org/';
//ns1:RetrievePNRResponse[1]/ns1:RetrievePNRResult[1]/a:Airlines[1]/a:Airline[1]/a:LogicalFlight[1]/a:LogicalFlight[a:Origin = '${#TestSuite#Origin}']/a:PhysicalFlights[1]/a:PhysicalFlight[1]/a:Customers[1]/a:Customer[1]/a:Key[1]</con:sourcePath>
        <con:targetType>CustomerKey</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers entitize="false" failOnError="true" ignoreEmpty="false" setNullOnMissingSource="true" transferChildNodes="false" transferTextContent="true" transferToAll="false">
        <con:name>AirLinePersonKey</con:name>
        <con:sourceType>Response</con:sourceType>
        <con:sourceStep>2 RetrievePNR</con:sourceStep>
        <con:sourcePath>declare namespace a='http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Reservation.Response';
declare namespace ns1='http://tempuri.org/';
//ns1:RetrievePNRResponse[1]/ns1:RetrievePNRResult[1]/a:Airlines[1]/a:Airline[1]/a:LogicalFlight[1]/a:LogicalFlight[a:Origin = '${#TestSuite#Origin}']/a:PhysicalFlights[1]/a:PhysicalFlight[1]/a:Customers[1]/a:Customer[1]/a:AirlinePersons[1]/a:AirlinePerson[a:PTCID = 1]/a:Key[1]</con:sourcePath>
        <con:targetType>AirLinePersonKey</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers entitize="false" failOnError="true" ignoreEmpty="false" setNullOnMissingSource="true" transferChildNodes="false" transferTextContent="true" transferToAll="false">
        <con:name>SeatAssignmentKey</con:name>
        <con:sourceType>Response</con:sourceType>
        <con:sourceStep>2 RetrievePNR</con:sourceStep>
        <con:sourcePath>declare namespace a='http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Reservation.Response';
declare namespace ns1='http://tempuri.org/';
//ns1:RetrievePNRResponse[1]/ns1:RetrievePNRResult[1]/a:Airlines[1]/a:Airline[1]/a:LogicalFlight[1]/a:LogicalFlight[a:Origin = '${#TestSuite#Origin}']/a:PhysicalFlights[1]/a:PhysicalFlight[1]/a:Customers[1]/a:Customer[1]/a:AirlinePersons[1]/a:AirlinePerson[a:PTCID = 1]/a:SeatAssignments[1]/a:SeatAssignment[1]/a:Key[1]</con:sourcePath>
        <con:targetType>SeatAssignmentKey</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers entitize="false" failOnError="true" ignoreEmpty="false" setNullOnMissingSource="true" transferChildNodes="false" transferTextContent="true" transferToAll="false">
        <con:name>AirLinePersonKey_CHD</con:name>
        <con:sourceType>Response</con:sourceType>
        <con:sourceStep>2 RetrievePNR</con:sourceStep>
        <con:sourcePath>declare namespace a='http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Reservation.Response';
declare namespace ns1='http://tempuri.org/';
//ns1:RetrievePNRResponse[1]/ns1:RetrievePNRResult[1]/a:Airlines[1]/a:Airline[1]/a:LogicalFlight[1]/a:LogicalFlight[a:Origin = '${#TestSuite#Origin}']/a:PhysicalFlights[1]/a:PhysicalFlight[1]/a:Customers[1]/a:Customer[1]/a:AirlinePersons[1]/a:AirlinePerson[a:PTCID = 6]/a:Key[1]</con:sourcePath>
        <con:targetType>AirLinePersonKey_CHD</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers entitize="false" failOnError="true" ignoreEmpty="false" setNullOnMissingSource="true" transferChildNodes="false" transferTextContent="true" transferToAll="false">
        <con:name>SeatAssignmentKey_CHD</con:name>
        <con:sourceType>Response</con:sourceType>
        <con:sourceStep>2 RetrievePNR</con:sourceStep>
        <con:sourcePath>declare namespace a='http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Reservation.Response';
declare namespace ns1='http://tempuri.org/';
//ns1:RetrievePNRResponse[1]/ns1:RetrievePNRResult[1]/a:Airlines[1]/a:Airline[1]/a:LogicalFlight[1]/a:LogicalFlight[a:Origin = '${#TestSuite#Origin}']/a:PhysicalFlights[1]/a:PhysicalFlight[1]/a:Customers[1]/a:Customer[1]/a:AirlinePersons[1]/a:AirlinePerson[a:PTCID = 6]/a:SeatAssignments[1]/a:SeatAssignment[1]/a:Key[1]</con:sourcePath>
        <con:targetType>SeatAssignmentKey_CHD</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers entitize="false" failOnError="true" ignoreEmpty="false" setNullOnMissingSource="true" transferChildNodes="false" transferTextContent="true" transferToAll="false">
        <con:name>AirLinePersonKey_INF</con:name>
        <con:sourceType>Response</con:sourceType>
        <con:sourceStep>2 RetrievePNR</con:sourceStep>
        <con:sourcePath>declare namespace a='http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Reservation.Response';
declare namespace ns1='http://tempuri.org/';
//ns1:RetrievePNRResponse[1]/ns1:RetrievePNRResult[1]/a:Airlines[1]/a:Airline[1]/a:LogicalFlight[1]/a:LogicalFlight[a:Origin = '${#TestSuite#Origin}']/a:PhysicalFlights[1]/a:PhysicalFlight[1]/a:Customers[1]/a:Customer[1]/a:AirlinePersons[1]/a:AirlinePerson[a:PTCID = 5]/a:Key[1]</con:sourcePath>
        <con:targetType>AirLinePersonKey_INF</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers entitize="false" failOnError="true" ignoreEmpty="false" setNullOnMissingSource="true" transferChildNodes="false" transferTextContent="true" transferToAll="false">
        <con:name>SeatAssignmentKey_INF</con:name>
        <con:sourceType>Response</con:sourceType>
        <con:sourceStep>2 RetrievePNR</con:sourceStep>
        <con:sourcePath>declare namespace a='http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Reservation.Response';
declare namespace ns1='http://tempuri.org/';
//ns1:RetrievePNRResponse[1]/ns1:RetrievePNRResult[1]/a:Airlines[1]/a:Airline[1]/a:LogicalFlight[1]/a:LogicalFlight[a:Origin = '${#TestSuite#Origin}']/a:PhysicalFlights[1]/a:PhysicalFlight[1]/a:Customers[1]/a:Customer[1]/a:AirlinePersons[1]/a:AirlinePerson[a:PTCID =5]/a:SeatAssignments[1]/a:SeatAssignment[1]/a:Key[1]</con:sourcePath>
        <con:targetType>SeatAssignmentKey_INF</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers entitize="false" failOnError="true" ignoreEmpty="false" setNullOnMissingSource="true" transferChildNodes="false" transferTextContent="true" transferToAll="false">
        <con:name>ReservationKey_returnSeg</con:name>
        <con:sourceType>Response</con:sourceType>
        <con:sourceStep>2 RetrievePNR</con:sourceStep>
        <con:sourcePath>declare namespace a='http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Reservation.Response';
declare namespace ns1='http://tempuri.org/';
//ns1:RetrievePNRResponse[1]/ns1:RetrievePNRResult[1]/a:Key[1]</con:sourcePath>
        <con:targetType>ReservationKey_returnSeg</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers entitize="false" failOnError="true" ignoreEmpty="false" setNullOnMissingSource="true" transferChildNodes="false" transferTextContent="true" transferToAll="false">
        <con:name>LogicalFlightKey_returnSeg</con:name>
        <con:sourceType>Response</con:sourceType>
        <con:sourceStep>2 RetrievePNR</con:sourceStep>
        <con:sourcePath>declare namespace a='http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Reservation.Response';
declare namespace ns1='http://tempuri.org/';
//ns1:RetrievePNRResponse[1]/ns1:RetrievePNRResult[1]/a:Airlines[1]/a:Airline[1]/a:LogicalFlight[1]/a:LogicalFlight[a:Origin = '${#TestSuite#Destination}']/a:Key[1]</con:sourcePath>
        <con:targetType>LogicalFlightKey_returnSeg</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers entitize="false" failOnError="true" ignoreEmpty="false" setNullOnMissingSource="true" transferChildNodes="false" transferTextContent="true" transferToAll="false">
        <con:name>PhysicalFlightKey_returnSeg</con:name>
        <con:sourceType>Response</con:sourceType>
        <con:sourceStep>2 RetrievePNR</con:sourceStep>
        <con:sourcePath>declare namespace a='http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Reservation.Response';
declare namespace ns1='http://tempuri.org/';
//ns1:RetrievePNRResponse[1]/ns1:RetrievePNRResult[1]/a:Airlines[1]/a:Airline[1]/a:LogicalFlight[1]/a:LogicalFlight[a:Origin = '${#TestSuite#Destination}']/a:PhysicalFlights[1]/a:PhysicalFlight[1]/a:Key[1]</con:sourcePath>
        <con:targetType>PhysicalFlightKey_returnSeg</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers entitize="false" failOnError="true" ignoreEmpty="false" setNullOnMissingSource="true" transferChildNodes="false" transferTextContent="true" transferToAll="false">
        <con:name>CustomerKey_returnSeg</con:name>
        <con:sourceType>Response</con:sourceType>
        <con:sourceStep>2 RetrievePNR</con:sourceStep>
        <con:sourcePath>declare namespace a='http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Reservation.Response';
declare namespace ns1='http://tempuri.org/';
//ns1:RetrievePNRResponse[1]/ns1:RetrievePNRResult[1]/a:Airlines[1]/a:Airline[1]/a:LogicalFlight[1]/a:LogicalFlight[a:Origin = '${#TestSuite#Destination}']/a:PhysicalFlights[1]/a:PhysicalFlight[1]/a:Customers[1]/a:Customer[1]/a:Key[1]</con:sourcePath>
        <con:targetType>CustomerKey_returnSeg</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers entitize="false" failOnError="true" ignoreEmpty="false" setNullOnMissingSource="true" transferChildNodes="false" transferTextContent="true" transferToAll="false">
        <con:name>AirLinePersonKey_returnSeg</con:name>
        <con:sourceType>Response</con:sourceType>
        <con:sourceStep>2 RetrievePNR</con:sourceStep>
        <con:sourcePath>declare namespace a='http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Reservation.Response';
declare namespace ns1='http://tempuri.org/';
//ns1:RetrievePNRResponse[1]/ns1:RetrievePNRResult[1]/a:Airlines[1]/a:Airline[1]/a:LogicalFlight[1]/a:LogicalFlight[a:Origin = '${#TestSuite#Destination}']/a:PhysicalFlights[1]/a:PhysicalFlight[1]/a:Customers[1]/a:Customer[1]/a:AirlinePersons[1]/a:AirlinePerson[a:PTCID = 1]/a:Key[1]</con:sourcePath>
        <con:targetType>AirLinePersonKey_returnSeg</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers entitize="false" failOnError="true" ignoreEmpty="false" setNullOnMissingSource="true" transferChildNodes="false" transferTextContent="true" transferToAll="false">
        <con:name>SeatAssignmentKey_returnSeg</con:name>
        <con:sourceType>Response</con:sourceType>
        <con:sourceStep>2 RetrievePNR</con:sourceStep>
        <con:sourcePath>declare namespace a='http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Reservation.Response';
declare namespace ns1='http://tempuri.org/';
//ns1:RetrievePNRResponse[1]/ns1:RetrievePNRResult[1]/a:Airlines[1]/a:Airline[1]/a:LogicalFlight[1]/a:LogicalFlight[a:Origin = '${#TestSuite#Destination}']/a:PhysicalFlights[1]/a:PhysicalFlight[1]/a:Customers[1]/a:Customer[1]/a:AirlinePersons[1]/a:AirlinePerson[a:PTCID = 1]/a:SeatAssignments[1]/a:SeatAssignment[1]/a:Key[1]</con:sourcePath>
        <con:targetType>SeatAssignmentKey_returnSeg</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers entitize="false" failOnError="true" ignoreEmpty="false" setNullOnMissingSource="true" transferChildNodes="false" transferTextContent="true" transferToAll="false">
        <con:name>AirLinePersonKey_returnSeg_CHD</con:name>
        <con:sourceType>Response</con:sourceType>
        <con:sourceStep>2 RetrievePNR</con:sourceStep>
        <con:sourcePath>declare namespace a='http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Reservation.Response';
declare namespace ns1='http://tempuri.org/';
//ns1:RetrievePNRResponse[1]/ns1:RetrievePNRResult[1]/a:Airlines[1]/a:Airline[1]/a:LogicalFlight[1]/a:LogicalFlight[a:Origin = '${#TestSuite#Destination}']/a:PhysicalFlights[1]/a:PhysicalFlight[1]/a:Customers[1]/a:Customer[1]/a:AirlinePersons[1]/a:AirlinePerson[a:PTCID = 6]/a:Key[1]</con:sourcePath>
        <con:targetType>AirLinePersonKey_returnSeg_CHD</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers entitize="false" failOnError="true" ignoreEmpty="false" setNullOnMissingSource="true" transferChildNodes="false" transferTextContent="true" transferToAll="false">
        <con:name>SeatAssignmentKey_returnSeg_CHD</con:name>
        <con:sourceType>Response</con:sourceType>
        <con:sourceStep>2 RetrievePNR</con:sourceStep>
        <con:sourcePath>declare namespace a='http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Reservation.Response';
declare namespace ns1='http://tempuri.org/';
//ns1:RetrievePNRResponse[1]/ns1:RetrievePNRResult[1]/a:Airlines[1]/a:Airline[1]/a:LogicalFlight[1]/a:LogicalFlight[a:Origin = '${#TestSuite#Destination}']/a:PhysicalFlights[1]/a:PhysicalFlight[1]/a:Customers[1]/a:Customer[1]/a:AirlinePersons[1]/a:AirlinePerson[a:PTCID = 6]/a:SeatAssignments[1]/a:SeatAssignment[1]/a:Key[1]</con:sourcePath>
        <con:targetType>SeatAssignmentKey_returnSeg_CHD</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers entitize="false" failOnError="true" ignoreEmpty="false" setNullOnMissingSource="true" transferChildNodes="false" transferTextContent="true" transferToAll="false">
        <con:name>AirLinePersonKey_returnSeg_INF</con:name>
        <con:sourceType>Response</con:sourceType>
        <con:sourceStep>2 RetrievePNR</con:sourceStep>
        <con:sourcePath>declare namespace a='http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Reservation.Response';
declare namespace ns1='http://tempuri.org/';
//ns1:RetrievePNRResponse[1]/ns1:RetrievePNRResult[1]/a:Airlines[1]/a:Airline[1]/a:LogicalFlight[1]/a:LogicalFlight[a:Origin = '${#TestSuite#Destination}']/a:PhysicalFlights[1]/a:PhysicalFlight[1]/a:Customers[1]/a:Customer[1]/a:AirlinePersons[1]/a:AirlinePerson[a:PTCID = 5]/a:Key[1]</con:sourcePath>
        <con:targetType>AirLinePersonKey_returnSeg_INF</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers entitize="false" failOnError="true" ignoreEmpty="false" setNullOnMissingSource="true" transferChildNodes="false" transferTextContent="true" transferToAll="false">
        <con:name>SeatAssignmentKey_returnSeg_INF</con:name>
        <con:sourceType>Response</con:sourceType>
        <con:sourceStep>2 RetrievePNR</con:sourceStep>
        <con:sourcePath>declare namespace a='http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Reservation.Response';
declare namespace ns1='http://tempuri.org/';
//ns1:RetrievePNRResponse[1]/ns1:RetrievePNRResult[1]/a:Airlines[1]/a:Airline[1]/a:LogicalFlight[1]/a:LogicalFlight[a:Origin = '${#TestSuite#Destination}']/a:PhysicalFlights[1]/a:PhysicalFlight[1]/a:Customers[1]/a:Customer[1]/a:AirlinePersons[1]/a:AirlinePerson[a:PTCID =5]/a:SeatAssignments[1]/a:SeatAssignment[1]/a:Key[1]</con:sourcePath>
        <con:targetType>SeatAssignmentKey_returnSeg_INF</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers entitize="false" failOnError="true" ignoreEmpty="false" setNullOnMissingSource="true" transferChildNodes="false" transferTextContent="true" transferToAll="false">
        <con:name>LFID</con:name>
        <con:sourceType>Response</con:sourceType>
        <con:sourceStep>2 RetrievePNR</con:sourceStep>
        <con:sourcePath>declare namespace a='http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Reservation.Response';
declare namespace ns1='http://tempuri.org/';
//ns1:RetrievePNRResponse[1]/ns1:RetrievePNRResult[1]/a:Airlines[1]/a:Airline[1]/a:LogicalFlight[1]/a:LogicalFlight[ a:Origin = '${#TestSuite#Origin}']/a:LogicalFlightID[1]</con:sourcePath>
        <con:targetType>LFID</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers disabled="false" entitize="false" failOnError="true" ignoreEmpty="false" setNullOnMissingSource="true" transferChildNodes="false" transferTextContent="true" transferToAll="false" useXQuery="false">
        <con:name>LFID_returnSeg</con:name>
        <con:sourceType>Response</con:sourceType>
        <con:sourceStep>2 RetrievePNR</con:sourceStep>
        <con:sourcePath>declare namespace a='http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Reservation.Response';
declare namespace ns1='http://tempuri.org/';
//ns1:RetrievePNRResponse[1]/ns1:RetrievePNRResult[1]/a:Airlines[1]/a:Airline[1]/a:LogicalFlight[1]/a:LogicalFlight[a:Origin =  '${#TestSuite#Destination}']/a:LogicalFlightID[1]</con:sourcePath>
        <con:targetType>LFID_returnSeg</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers entitize="false" failOnError="true" ignoreEmpty="false" setNullOnMissingSource="true" transferChildNodes="false" transferTextContent="true" transferToAll="false">
        <con:name>Depdate_onward</con:name>
        <con:sourceType>Response</con:sourceType>
        <con:sourceStep>2 RetrievePNR</con:sourceStep>
        <con:sourcePath>declare namespace a='http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Reservation.Response';
declare namespace ns1='http://tempuri.org/';
//ns1:RetrievePNRResponse[1]/ns1:RetrievePNRResult[1]/a:Airlines[1]/a:Airline[1]/a:LogicalFlight[1]/a:LogicalFlight[ a:Origin = '${#TestSuite#Origin}']/a:DepartureDate[1]</con:sourcePath>
        <con:targetType>Depdate_onward</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers disabled="false" entitize="false" failOnError="true" ignoreEmpty="false" setNullOnMissingSource="true" transferChildNodes="false" transferTextContent="true" transferToAll="false" useXQuery="false">
        <con:name>Depdate_return</con:name>
        <con:sourceType>Response</con:sourceType>
        <con:sourceStep>2 RetrievePNR</con:sourceStep>
        <con:sourcePath>declare namespace a='http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Reservation.Response';
declare namespace ns1='http://tempuri.org/';
//ns1:RetrievePNRResponse[1]/ns1:RetrievePNRResult[1]/a:Airlines[1]/a:Airline[1]/a:LogicalFlight[1]/a:LogicalFlight[ a:Origin = '${#TestSuite#Destination}']/a:DepartureDate[1]</con:sourcePath>
        <con:targetType>Depdate_return</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers entitize="false" failOnError="true" ignoreEmpty="false" setNullOnMissingSource="true" transferChildNodes="false" transferTextContent="true" transferToAll="false">
        <con:name>Currency</con:name>
        <con:sourceType>Response</con:sourceType>
        <con:sourceStep>2 RetrievePNR</con:sourceStep>
        <con:sourcePath>declare namespace a='http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Reservation.Response';
declare namespace ns1='http://tempuri.org/';
//ns1:RetrievePNRResponse[1]/ns1:RetrievePNRResult[1]/a:ReservationCurrency[1]</con:sourcePath>
        <con:targetType>Currency</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep id="1b2f5449-91f7-4abd-a93a-467e81603480" name="RetrieveSeatAvailabilityList_onward" type="request">
    <con:settings/>
    <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:interface>BasicHttpBinding_IConnectPoint_Flight</con:interface>
      <con:operation>RetrieveSeatAvailabilityList</con:operation>
      <con:request id="8fb6a77f-4955-4275-939e-baee8dd36d7c" incomingWss="" name="RetrieveSeatAvailabilityList_onward" outgoingWss="" sslKeystore="" timeout="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint/>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/" xmlns:rad="http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Request" xmlns:rad1="http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Flight.Request">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:RetrieveSeatAvailabilityList>
         <!--Optional:-->
         <tem:RetrieveSeatAvailabilityListRequest>
            <rad:SecurityGUID>${#TestSuite#securityToken}</rad:SecurityGUID>
            <rad:CarrierCodes>
               <!--Zero or more repetitions:-->
               <rad:CarrierCode>
                  <rad:AccessibleCarrierCode>${#TestSuite#carriercode}</rad:AccessibleCarrierCode>
               </rad:CarrierCode>
            </rad:CarrierCodes>
            <!--Optional:-->
            <rad:ClientIPAddress xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <!--Optional:-->
            <rad:HistoricUserName>radixx</rad:HistoricUserName>
            <rad1:LogicalFlightID>${#TestCase#LFID}</rad1:LogicalFlightID>
            <rad1:DepartureDate>${#TestCase#Depdate_onward}</rad1:DepartureDate>
            <rad1:CabinName xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <rad1:Currency>${#TestCase#Currency}</rad1:Currency>
            <rad1:UTCOffset>0</rad1:UTCOffset>
            <!--Optional:-->
            <rad1:FareBasisCode xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <!--Optional:-->
            <rad1:ExcludePricing>false</rad1:ExcludePricing>
         </tem:RetrieveSeatAvailabilityListRequest>
      </tem:RetrieveSeatAvailabilityList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:assertion id="24fbe4f0-3841-4afa-9655-6de15661f4f4" name="Valid HTTP Status Codes" type="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion id="babd4d08-9cb7-4c86-b933-9a6fa941c6e9" name="Response SLA" type="Response SLA Assertion">
          <con:configuration>
            <SLA>3000</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion id="602483d6-9db7-49fb-8c28-03beb76bc3b0" name="Not SOAP Fault" type="SOAP Fault Assertion"/>
        <con:assertion id="7ca0fae0-342f-4dd3-87a3-79ea487b55b6" name="Schema Compliance" type="Schema Compliance">
          <con:configuration/>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:wsaConfig action="http://tempuri.org/IConnectPoint_Flight/RetrieveSeatAvailabilityList" mustUnderstand="NONE" version="200508"/>
        <con:wsrmConfig version="1.2"/>
      </con:request>
    </con:config>
  </con:testStep>
  <con:testStep id="baa863da-b1c2-40da-9df6-31cccdb621f4" name="RetrieveSeatAvailabilityList_return" type="request">
    <con:settings/>
    <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:interface>BasicHttpBinding_IConnectPoint_Flight</con:interface>
      <con:operation>RetrieveSeatAvailabilityList</con:operation>
      <con:request id="8fb6a77f-4955-4275-939e-baee8dd36d7c" incomingWss="" name="RetrieveSeatAvailabilityList_return" outgoingWss="" sslKeystore="" timeout="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint/>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/" xmlns:rad="http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Request" xmlns:rad1="http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Flight.Request">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:RetrieveSeatAvailabilityList>
         <!--Optional:-->
         <tem:RetrieveSeatAvailabilityListRequest>
            <rad:SecurityGUID>${#TestSuite#securityToken}</rad:SecurityGUID>
            <rad:CarrierCodes>
               <!--Zero or more repetitions:-->
               <rad:CarrierCode>
                  <rad:AccessibleCarrierCode>${#TestSuite#carriercode}</rad:AccessibleCarrierCode>
               </rad:CarrierCode>
            </rad:CarrierCodes>
            <!--Optional:-->
            <rad:ClientIPAddress xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <!--Optional:-->
            <rad:HistoricUserName>radixx</rad:HistoricUserName>
            <rad1:LogicalFlightID>${#TestCase#LFID_returnSeg}</rad1:LogicalFlightID>
            <rad1:DepartureDate>${#TestCase#Depdate_return}</rad1:DepartureDate>
            <rad1:CabinName xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <rad1:Currency>${#TestCase#Currency}</rad1:Currency>
            <rad1:UTCOffset>0</rad1:UTCOffset>
            <!--Optional:-->
            <rad1:FareBasisCode xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <!--Optional:-->
            <rad1:ExcludePricing>false</rad1:ExcludePricing>
         </tem:RetrieveSeatAvailabilityListRequest>
      </tem:RetrieveSeatAvailabilityList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:assertion id="24fbe4f0-3841-4afa-9655-6de15661f4f4" name="Valid HTTP Status Codes" type="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion id="babd4d08-9cb7-4c86-b933-9a6fa941c6e9" name="Response SLA" type="Response SLA Assertion">
          <con:configuration>
            <SLA>3000</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion id="602483d6-9db7-49fb-8c28-03beb76bc3b0" name="Not SOAP Fault" type="SOAP Fault Assertion"/>
        <con:assertion id="7ca0fae0-342f-4dd3-87a3-79ea487b55b6" name="Schema Compliance" type="Schema Compliance">
          <con:configuration/>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:wsaConfig action="http://tempuri.org/IConnectPoint_Flight/RetrieveSeatAvailabilityList" mustUnderstand="NONE" version="200508"/>
        <con:wsrmConfig version="1.2"/>
      </con:request>
    </con:config>
  </con:testStep>
  <con:testStep id="5d717776-f2e6-440f-9562-84897eb505e2" name="extract_Seatnumber_onward" type="groovy">
    <con:settings/>
    <con:config>
      <script>// script to get seats and seat charges for 1 ADT
import groovy.xml.*;
import groovy.util.*;
import java.util.Scanner;

testRunner.testCase.testSuite.setPropertyValue("RowSeat",'' );
testRunner.testCase.testSuite.setPropertyValue("RowNumber",'' );
testRunner.testCase.testSuite.setPropertyValue("RowSeat_INF",'' );
testRunner.testCase.testSuite.setPropertyValue("RowNumber_INF",'' );
testRunner.testCase.testSuite.setPropertyValue("RowSeat_CHD",'' );
testRunner.testCase.testSuite.setPropertyValue("RowNumber_CHD",'' );



def cabinsXML = context.expand( '${RetrieveSeatAvailabilityList_onward#Response#declare namespace ns1=\'http://tempuri.org/\'; declare namespace a=\'http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Flight.Response\'; //ns1:RetrieveSeatAvailabilityListResponse[1]/ns1:RetrieveSeatAvailabilityListResult[1]/a:PhysicalFlights[1]/a:PhysicalFlight[1]/a:Cabins[1]}' )
//log.info(cabinsXML)
def cabins = new XmlParser().parseText(cabinsXML);
def seatMaps = cabins['a:Cabin']['a:SeatMaps'];
def seatAssignments = cabins['a:Cabin']['a:SeatAssignments'];
def seatExceptions = cabins['a:Cabin']['a:SeatExceptions'];
def seatCharges = cabins['a:Cabin']['a:SeatCharges'];

takenSeats = [] as List;
possibleSeats = [] as List;

seatSSRCode = "";
seatAmount = "";
seatRow = "";
seatColumn = "";

// get all assigned seats
for (seatAssignment in seatAssignments['a:SeatAssignment'])
{
	seatRow = seatAssignment['a:RowNumber'].text();
	seatColumn = seatAssignment['a:Seat'].text();
	takenSeats.add("${seatRow}${seatColumn}");
}

// get seatable seats / filter out blocked seats
for (seatMap in seatMaps['a:SeatMap'])
{
	row = seatMap['a:RowNumber'].text();
	seatColumns = seatMap['a:Seats'].text().replace(' ', '') as List;
	blockedSeats = seatMap['a:BlockedSeats'].text().replace(' ', '') as List;
	preBlockedSeats = seatMap['a:PreBlockedSeats'].text().replace(' ', '') as List;

	seatColumns -= blockedSeats;
	seatColumns -= preBlockedSeats;
	
	for (seatColumn in seatColumns)
	{
		possibleSeats.add("${row}${seatColumn}");
	}
}
//log.info (possibleSeats)
// filter assigned seats from seat list
possibleSeats -= takenSeats;

log.info (possibleSeats)
log.info(takenSeats)




def Seat_ADT = possibleSeats[12];
def Seat_INF = possibleSeats[13];
def Seat_CHD = possibleSeats[14];
//
//new Scanner(Seat_ADT).useDelimiter("[^\\d]+").nextInt()



def RowSeat = Seat_ADT.replaceAll("\\D+","") ;
def RowNumber = Seat_ADT.replaceAll("\\d+","") ;

def RowSeat_INF = Seat_INF.replaceAll("\\D+","") ;
def RowNumber_INF = Seat_INF.replaceAll("\\d+","") ;

def RowSeat_CHD = Seat_CHD.replaceAll("\\D+","") ;
def RowNumber_CHD = Seat_CHD.replaceAll("\\d+","") ;

log.info RowSeat
log.info RowNumber

log.info RowSeat_INF
log.info RowNumber_INF
log.info RowSeat_CHD
log.info RowNumber_CHD


testRunner.testCase.testSuite.setPropertyValue("RowSeat", RowSeat);
testRunner.testCase.testSuite.setPropertyValue("RowNumber", RowNumber);
testRunner.testCase.testSuite.setPropertyValue("RowSeat_INF", RowSeat_INF);
testRunner.testCase.testSuite.setPropertyValue("RowNumber_INF", RowNumber_INF);
testRunner.testCase.testSuite.setPropertyValue("RowSeat_CHD", RowSeat_CHD);
testRunner.testCase.testSuite.setPropertyValue("RowNumber_CHD", RowNumber_CHD);</script>
    </con:config>
  </con:testStep>
  <con:testStep id="bff60a78-7692-49c4-94e4-d7cf35cc5482" name="extract_Seatnumber_return" type="groovy">
    <con:settings/>
    <con:config>
      <script>// script to get seats and seat charges for 1 ADT
import groovy.xml.*;
import groovy.util.*;
import java.util.Scanner;

testRunner.testCase.testSuite.setPropertyValue("RowSeat_returnSeg", '');
testRunner.testCase.testSuite.setPropertyValue("RowNumber_returnSeg", '');
testRunner.testCase.testSuite.setPropertyValue("RowSeat_returnSeg_INF", '');
testRunner.testCase.testSuite.setPropertyValue("RowNumber_returnSeg_INF", '');
testRunner.testCase.testSuite.setPropertyValue("RowSeat_returnSeg_CHD", '');
testRunner.testCase.testSuite.setPropertyValue("RowNumber_returnSeg_CHD", '');

def cabinsXML = context.expand( '${RetrieveSeatAvailabilityList_return#Response#declare namespace ns1=\'http://tempuri.org/\'; declare namespace a=\'http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Flight.Response\'; //ns1:RetrieveSeatAvailabilityListResponse[1]/ns1:RetrieveSeatAvailabilityListResult[1]/a:PhysicalFlights[1]/a:PhysicalFlight[1]/a:Cabins[1]}' )
log.info(cabinsXML)
def cabins = new XmlParser().parseText(cabinsXML);
def seatMaps = cabins['a:Cabin']['a:SeatMaps'];
def seatAssignments = cabins['a:Cabin']['a:SeatAssignments'];
def seatExceptions = cabins['a:Cabin']['a:SeatExceptions'];
def seatCharges = cabins['a:Cabin']['a:SeatCharges'];

takenSeats = [] as List;
possibleSeats = [] as List;

seatSSRCode = "";
seatAmount = "";
seatRow = "";
seatColumn = "";

// get all assigned seats
for (seatAssignment in seatAssignments['a:SeatAssignment'])
{
	seatRow = seatAssignment['a:RowNumber'].text();
	seatColumn = seatAssignment['a:Seat'].text();
	takenSeats.add("${seatRow}${seatColumn}");
}

// get seatable seats / filter out blocked seats
for (seatMap in seatMaps['a:SeatMap'])
{
	row = seatMap['a:RowNumber'].text();
	seatColumns = seatMap['a:Seats'].text().replace(' ', '') as List;
	blockedSeats = seatMap['a:BlockedSeats'].text().replace(' ', '') as List;
	preBlockedSeats = seatMap['a:PreBlockedSeats'].text().replace(' ', '') as List;

	seatColumns -= blockedSeats;
	seatColumns -= preBlockedSeats;
	
	for (seatColumn in seatColumns)
	{
		possibleSeats.add("${row}${seatColumn}");
	}
}
log.info (possibleSeats)
// filter assigned seats from seat list
possibleSeats -= takenSeats;

log.info (possibleSeats)
log.info(takenSeats)
//
// get charges

//for (seatCharge in seatCharges['a:SeatCharge'])
//{
//	currentSeatRow = seatCharge['a:RowNumber'].text();
//	currentSeatColumn = seatCharge['a:Seat'].text();
//	currentSeat = "${currentSeatRow}${currentSeatColumn}";
//	if (seatCharge['a:ServiceCode'].text() != "" &amp;&amp; currentSeat in possibleSeats)
//	{
//		seatSSRCode = seatCharge['a:ServiceCode'].text();
//		seatRow = currentSeatRow;
//		seatColumn = currentSeatColumn;
//		seatAmount = seatCharge['a:Amount'].text();
//		break;
//	}
//}





def ret_Seat_ADT = possibleSeats[12];
def ret_Seat_INF = possibleSeats[13];
def ret_Seat_CHD = possibleSeats[14];
//
//new Scanner(Seat_ADT).useDelimiter("[^\\d]+").nextInt()


def RowSeat_returnSeg = ret_Seat_ADT.replaceAll("\\D+","") ;
def RowNumber_returnSeg = ret_Seat_ADT.replaceAll("\\d+","") ;

def RowSeat_returnSeg_INF = ret_Seat_INF.replaceAll("\\D+","") ;
def RowNumber_returnSeg_INF = ret_Seat_INF.replaceAll("\\d+","") ;

def RowSeat_returnSeg_CHD = ret_Seat_CHD.replaceAll("\\D+","") ;
def RowNumber_returnSeg_CHD = ret_Seat_CHD.replaceAll("\\d+","") ;


log.info RowSeat_returnSeg
log.info RowNumber_returnSeg

log.info RowSeat_returnSeg_INF
log.info RowNumber_returnSeg_INF
log.info RowSeat_returnSeg_CHD
log.info RowNumber_returnSeg_CHD


testRunner.testCase.testSuite.setPropertyValue("RowSeat_returnSeg", RowSeat_returnSeg);
testRunner.testCase.testSuite.setPropertyValue("RowNumber_returnSeg", RowNumber_returnSeg);
testRunner.testCase.testSuite.setPropertyValue("RowSeat_returnSeg_INF", RowSeat_returnSeg_INF);
testRunner.testCase.testSuite.setPropertyValue("RowNumber_returnSeg_INF", RowNumber_returnSeg_INF);
testRunner.testCase.testSuite.setPropertyValue("RowSeat_returnSeg_CHD", RowSeat_returnSeg_CHD);
testRunner.testCase.testSuite.setPropertyValue("RowNumber_returnSeg_CHD", RowNumber_returnSeg_CHD);</script>
    </con:config>
  </con:testStep>
  <con:testStep id="b4b0b46e-4644-41e6-8ba5-544dc4bf14f9" name="Delay" type="delay">
    <con:settings/>
    <con:config>
      <delay>1000</delay>
    </con:config>
  </con:testStep>
  <con:testStep id="0da1e3e7-84a7-4d08-84b8-1a9eb5b62f3f" name="3 - SeatAssignment" type="request">
    <con:settings/>
    <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:interface>BasicHttpBinding_IConnectPoint_Seating</con:interface>
      <con:operation>SeatAssignment</con:operation>
      <con:request id="708c8dd8-5d5d-453b-9f6a-36f5155c58e1" incomingWss="" name="3 - SeatAssignment" outgoingWss="" sslKeystore="" timeout="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint/>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/" xmlns:rad="http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Request" xmlns:rad1="http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Seating.Request">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:SeatAssignment>
         <!--Optional:-->
         <tem:SeatAssignmentRequest>
            <rad:SecurityGUID>${#TestSuite#securityToken}</rad:SecurityGUID>
            <rad:CarrierCodes>
               <!--Zero or more repetitions:-->
               <rad:CarrierCode>
                  <rad:AccessibleCarrierCode>${#TestSuite#carriercode}</rad:AccessibleCarrierCode>
               </rad:CarrierCode>
            </rad:CarrierCodes>
            <!--Optional:-->
            <rad:ClientIPAddress xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <!--Optional:-->
            <rad:HistoricUserName xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <rad1:ActionType>AssignPassengerSeat</rad1:ActionType>
            <rad1:ReservationInfo>
               <rad:SeriesNumber>299</rad:SeriesNumber>
               <rad:ConfirmationNumber>${1 Create RT pnr with multiple passengers#PNR}</rad:ConfirmationNumber>
            </rad1:ReservationInfo>
            <rad1:SeatAssignmentDetails>
               <!--Zero or more repetitions:-->
               <rad1:SeatAssignmentDetail>
                  <rad1:ReservationKey>${#TestCase#ReservationKey}</rad1:ReservationKey>
                  <rad1:LogicalFlightKey>${#TestCase#LogicalFlightKey}</rad1:LogicalFlightKey>
                  <rad1:PhysicalFlightKey>${#TestCase#PhysicalFlightKey}</rad1:PhysicalFlightKey>
                  <rad1:CustomerKey>${#TestCase#PhysicalFlightKey}</rad1:CustomerKey>
                  <rad1:AirLinePersonKey>${#TestCase#SeatAssignmentKey_CHD}</rad1:AirLinePersonKey>
                  <rad1:SeatAssignmentKey>${#TestCase#AirLinePersonKey_CHD}</rad1:SeatAssignmentKey>
                  <rad1:Seat>${#TestSuite#RowSeat_CHD}</rad1:Seat>
                  <rad1:RowNumber>${#TestSuite#RowNumber_CHD}</rad1:RowNumber>
                  <rad1:OldSeat>${empty}</rad1:OldSeat>
                  <rad1:OldRowNumber>${empty}</rad1:OldRowNumber>
               </rad1:SeatAssignmentDetail>
               <rad1:SeatAssignmentDetail>
                  <rad1:ReservationKey>${#TestCase#ReservationKey}</rad1:ReservationKey>
                  <rad1:LogicalFlightKey>${#TestCase#LogicalFlightKey}</rad1:LogicalFlightKey>
                  <rad1:PhysicalFlightKey>${#TestCase#PhysicalFlightKey}</rad1:PhysicalFlightKey>
                  <rad1:CustomerKey>${#TestCase#PhysicalFlightKey}</rad1:CustomerKey>
                  <rad1:AirLinePersonKey>${#TestCase#AirLinePersonKey_INF}</rad1:AirLinePersonKey>
                  <rad1:SeatAssignmentKey>${#TestCase#SeatAssignmentKey_INF}</rad1:SeatAssignmentKey>
                  <rad1:Seat>${#TestSuite#RowSeat_INF}</rad1:Seat>
                  <rad1:RowNumber>${#TestSuite#RowNumber_INF}</rad1:RowNumber>
                  <rad1:OldSeat>${empty}</rad1:OldSeat>
                  <rad1:OldRowNumber>${empty}</rad1:OldRowNumber>
               </rad1:SeatAssignmentDetail>
               <rad1:SeatAssignmentDetail>
                  <rad1:ReservationKey>${#TestCase#ReservationKey_returnSeg}</rad1:ReservationKey>
                  <rad1:LogicalFlightKey>${#TestCase#LogicalFlightKey_returnSeg}</rad1:LogicalFlightKey>
                  <rad1:PhysicalFlightKey>${#TestCase#PhysicalFlightKey_returnSeg}</rad1:PhysicalFlightKey>
                  <rad1:CustomerKey>${#TestCase#CustomerKey_returnSeg}</rad1:CustomerKey>
                  <rad1:AirLinePersonKey>${#TestCase#AirLinePersonKey_returnSeg_CHD}</rad1:AirLinePersonKey>
                  <rad1:SeatAssignmentKey>${#TestCase#SeatAssignmentKey_returnSeg_CHD}</rad1:SeatAssignmentKey>
                  <rad1:Seat>${#TestSuite#RowSeat_returnSeg_CHD}</rad1:Seat>
                  <rad1:RowNumber>${#TestSuite#RowNumber_returnSeg_CHD}</rad1:RowNumber>
                  <rad1:OldSeat>${empty}</rad1:OldSeat>
                  <rad1:OldRowNumber>${empty}</rad1:OldRowNumber>
               </rad1:SeatAssignmentDetail>
               <rad1:SeatAssignmentDetail>
                  <rad1:ReservationKey>${#TestCase#ReservationKey_returnSeg}</rad1:ReservationKey>
                  <rad1:LogicalFlightKey>${#TestCase#LogicalFlightKey_returnSeg}</rad1:LogicalFlightKey>
                  <rad1:PhysicalFlightKey>${#TestCase#PhysicalFlightKey_returnSeg}</rad1:PhysicalFlightKey>
                  <rad1:CustomerKey>${#TestCase#CustomerKey_returnSeg}</rad1:CustomerKey>
                  <rad1:AirLinePersonKey>${#TestCase#AirLinePersonKey_returnSeg_INF}</rad1:AirLinePersonKey>
                  <rad1:SeatAssignmentKey>${#TestCase#SeatAssignmentKey_returnSeg_INF}</rad1:SeatAssignmentKey>
                  <rad1:Seat>${#TestSuite#RowSeat_returnSeg_INF}</rad1:Seat>
                  <rad1:RowNumber>${#TestSuite#RowNumber_returnSeg_INF}</rad1:RowNumber>
                  <rad1:OldSeat>${empty}</rad1:OldSeat>
                  <rad1:OldRowNumber>${empty}</rad1:OldRowNumber>
               </rad1:SeatAssignmentDetail>
               <rad1:SeatAssignmentDetail>
                  <rad1:ReservationKey>${#TestCase#ReservationKey_returnSeg}</rad1:ReservationKey>
                  <rad1:LogicalFlightKey>${#TestCase#LogicalFlightKey_returnSeg}</rad1:LogicalFlightKey>
                  <rad1:PhysicalFlightKey>${#TestCase#PhysicalFlightKey_returnSeg}</rad1:PhysicalFlightKey>
                  <rad1:CustomerKey>${#TestCase#CustomerKey_returnSeg}</rad1:CustomerKey>
                  <rad1:AirLinePersonKey>${#TestCase#AirLinePersonKey_returnSeg}</rad1:AirLinePersonKey>
                  <rad1:SeatAssignmentKey>${#TestCase#SeatAssignmentKey_returnSeg}</rad1:SeatAssignmentKey>
                  <rad1:Seat>${#TestSuite#RowSeat_returnSeg}</rad1:Seat>
                  <rad1:RowNumber>${#TestSuite#RowNumber_returnSeg}</rad1:RowNumber>
                  <rad1:OldSeat>${empty}</rad1:OldSeat>
                  <rad1:OldRowNumber>${empty}</rad1:OldRowNumber>
               </rad1:SeatAssignmentDetail>
               <rad1:SeatAssignmentDetail>
                  <rad1:ReservationKey>${#TestCase#ReservationKey}</rad1:ReservationKey>
                  <rad1:LogicalFlightKey>${#TestCase#LogicalFlightKey}</rad1:LogicalFlightKey>
                  <rad1:PhysicalFlightKey>${#TestCase#PhysicalFlightKey}</rad1:PhysicalFlightKey>
                  <rad1:CustomerKey>${#TestCase#CustomerKey}</rad1:CustomerKey>
                  <rad1:AirLinePersonKey>${#TestCase#AirLinePersonKey}</rad1:AirLinePersonKey>
                  <rad1:SeatAssignmentKey>${#TestCase#SeatAssignmentKey}</rad1:SeatAssignmentKey>
                  <rad1:Seat>${#TestSuite#RowSeat}</rad1:Seat>
                  <rad1:RowNumber>${#TestSuite#RowNumber}</rad1:RowNumber>
                  <rad1:OldSeat>${empty}</rad1:OldSeat>
                  <rad1:OldRowNumber>${empty}</rad1:OldRowNumber>
               </rad1:SeatAssignmentDetail>
            </rad1:SeatAssignmentDetails>
         </tem:SeatAssignmentRequest>
      </tem:SeatAssignment>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:assertion id="a628d4ba-eae8-40ce-bc80-434899f97ab6" name="Valid HTTP Status Codes" type="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion id="08c79bab-3f16-4c52-ad90-48efbd8f68a4" name="Not SOAP Fault" type="SOAP Fault Assertion"/>
        <con:assertion id="7ab61fc5-61ee-427c-905c-5049775d81d9" name="Schema Compliance" type="Schema Compliance">
          <con:configuration/>
        </con:assertion>
        <con:assertion id="11ca4d6e-0899-4880-8e97-e5a20a950bc9" name="Match content of [b:ExceptionLevel]" type="XPath Match">
          <con:configuration>
            <path>declare namespace ns1='http://tempuri.org/';
declare namespace a='http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Reservation.Response';
declare namespace b='http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Exceptions';
//ns1:SeatAssignmentResponse[1]/ns1:SeatAssignmentResult[1]/a:Exceptions[1]/b:ExceptionInformation.Exception[1]/b:ExceptionLevel[1]/text()</path>
            <content>Success</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:wsaConfig action="http://tempuri.org/IConnectPoint_Seating/SeatAssignment" mustUnderstand="NONE" version="200508"/>
        <con:wsrmConfig version="1.2"/>
        <con:environmentSpec>
          <con:entry environmentId="ff76c282-7c43-48ac-88d6-a00107f279b7">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:request>
    </con:config>
  </con:testStep>
  <con:testStep id="a124969f-27c3-445d-b598-b209ab3f9641" name="4 CreatePNR (Save)" type="request">
    <con:settings/>
    <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:interface>BasicHttpBinding_IConnectPoint_Reservation</con:interface>
      <con:operation>CreatePNR</con:operation>
      <con:request id="139a047a-77cb-4608-8843-c7988755af6e" incomingWss="" name="4 CreatePNR (Save)" outgoingWss="" sslKeystore="" timeout="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://rdxappint.radixxuat.com/RDX/Radixx.Connectpoint/ConnectPoint.Reservation.svc</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/" xmlns:rad="http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Request" xmlns:rad1="http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Reservation.Request">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:CreatePNR>
         <!--Optional:-->
         <tem:CreatePnrRequest>
            <rad:SecurityGUID>${#TestSuite#securityToken}</rad:SecurityGUID>
            <rad:CarrierCodes>
               <!--Zero or more repetitions:-->
               <rad:CarrierCode>
                  <rad:AccessibleCarrierCode>${#TestSuite#carriercode}</rad:AccessibleCarrierCode>
               </rad:CarrierCode>
            </rad:CarrierCodes>
            <!--Optional:-->
            <rad:ClientIPAddress xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <!--Optional:-->
            <rad:HistoricUserName xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <rad1:ActionType>SaveReservation</rad1:ActionType>
            <rad1:ReservationInfo>
               <rad:SeriesNumber>299</rad:SeriesNumber>
               <rad:ConfirmationNumber>${1 Create RT pnr with multiple passengers#PNR}</rad:ConfirmationNumber>
            </rad1:ReservationInfo>
         </tem:CreatePnrRequest>
      </tem:CreatePNR>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:assertion id="33be8d64-181a-48d3-9547-3f5ab5b9bea7" name="Valid HTTP Status Codes" type="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion id="fa002e6d-f11e-4aa1-8ec9-d595672964c3" name="Not SOAP Fault" type="SOAP Fault Assertion"/>
        <con:assertion id="ec4ea26c-a029-4df2-84b8-95cb0ec39306" name="Schema Compliance" type="Schema Compliance">
          <con:configuration/>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:wsaConfig action="http://tempuri.org/IConnectPoint_Reservation/CreatePNR" mustUnderstand="NONE" version="200508"/>
        <con:wsrmConfig version="1.2"/>
        <con:environmentSpec>
          <con:entry environmentId="ff76c282-7c43-48ac-88d6-a00107f279b7">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:request>
    </con:config>
  </con:testStep>
  <con:properties>
    <con:property>
      <con:name>Balance</con:name>
      <con:value>2272.25</con:value>
    </con:property>
    <con:property>
      <con:name>LFID</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>fareid</con:name>
      <con:value>1</con:value>
    </con:property>
    <con:property>
      <con:name>PNR</con:name>
      <con:value>SIXGXE</con:value>
    </con:property>
    <con:property>
      <con:name>fareid_returnSeg</con:name>
      <con:value>495</con:value>
    </con:property>
    <con:property>
      <con:name>LFID_returnSeg</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>s_ServiceID</con:name>
      <con:value>43</con:value>
    </con:property>
    <con:property>
      <con:name>s_SSRCategory</con:name>
      <con:value>42</con:value>
    </con:property>
    <con:property>
      <con:name>s_Amount</con:name>
      <con:value>25</con:value>
    </con:property>
    <con:property>
      <con:name>ReservationKey</con:name>
      <con:value>&lt;a:Key i:nil="true" xmlns:a="http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Reservation.Response" xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://tempuri.org/" xmlns:s="http://schemas.xmlsoap.org/soap/envelope/"/></con:value>
    </con:property>
    <con:property>
      <con:name>LogicalFlightKey</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>PhysicalFlightKey</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>CustomerKey</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>AirLinePersonKey</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>SeatAssignmentKey</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>ReservationKey_returnSeg</con:name>
      <con:value>&lt;a:Key i:nil="true" xmlns:a="http://schemas.datacontract.org/2004/07/Radixx.ConnectPoint.Reservation.Response" xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://tempuri.org/" xmlns:s="http://schemas.xmlsoap.org/soap/envelope/"/></con:value>
    </con:property>
    <con:property>
      <con:name>LogicalFlightKey_returnSeg</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>PhysicalFlightKey_returnSeg</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>CustomerKey_returnSeg</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>AirLinePersonKey_returnSeg</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>SeatAssignmentKey_returnSeg</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>AirLinePersonKey_INF</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>SeatAssignmentKey_INF</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>SeatAssignmentKey_CHD</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>AirLinePersonKey_CHD</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>AirLinePersonKey_returnSeg_CHD</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>SeatAssignmentKey_returnSeg_CHD</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>AirLinePersonKey_returnSeg_INF</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>SeatAssignmentKey_returnSeg_INF</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>Depdate_onward</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>Depdate_return</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>Currency</con:name>
      <con:value>AED</con:value>
    </con:property>
  </con:properties>
  <con:reportParameters/>
  <con:breakPoints>
    <con:testStepId>dc9a2870-ac26-4023-86da-fe056214c53e</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>bc0dda71-377e-4643-9c3e-cf8a5052bd5a</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>1b449212-282c-47b6-9d94-774fa0bd4c20</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>0fabcf99-dfa9-40fe-9ea6-f4a9c5d8c962</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>554935b7-8737-4a0d-a926-f8dbd9bf6484</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>00163856-c5a9-4c08-b1cd-a4f635e0ace9</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>40cfcdcb-0d60-46b5-9af3-b52e43abb855</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>38a83fdb-a30c-49ae-a787-997d903f9883</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>85e52dc5-805f-490a-aa02-d5c26f6d28b9</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>8b226bf3-8e96-4d04-a39c-c5885b9ecca8</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>6cf0c408-fb54-4b7c-a1fd-76c4f3b55514</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>7478d419-6c53-4711-93bb-9796f6b524b3</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>bf1b6e16-1726-49d2-a0af-a5d66f0d7acc</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>0b99f777-6c0b-4298-923f-d30266abad47</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>0028190f-d3e4-42f6-b2f0-7890a3425663</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>8728c2cd-d119-4cbd-9877-e0d8a52ac917</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>faa30b87-8e30-4daf-9059-ab336ca4381c</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>2b891951-9773-4195-82ae-f414744d5c7b</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>409444da-cf3a-4335-8612-94901b8c41c2</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>6b8d31d0-bf7b-4286-a02a-69219fd7b4fa</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>4e3d1464-4be0-4a01-bd77-1a475c6752fc</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>41c1523d-d275-4d68-9c1c-35fdb2b6d8ec</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>d76a22ce-31fc-4524-a794-5f3d2cc2348b</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>80adf7c1-1070-48e2-babd-c44471e37f40</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>75492980-e93d-488b-88ee-8c8da418f32b</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>59f78218-18a3-4761-8ebb-8d4c0206c8ac</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>af181d43-8e25-4419-a280-fcea0887c1e2</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>e4906fad-53a9-4704-90a8-b53bf4d94d9f</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>8baf1d39-9183-41e7-8103-f6cbc3a238a4</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>88bed696-e0fa-4603-a96a-97ae0c8095f0</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>b0c21ff0-9e04-4851-82ea-8472fd66f64d</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>7ac26ff3-8f97-44a2-a20d-52a62949c234</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>233f0223-e0af-45f4-9cdb-5461b114dc93</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>4aeb4c55-033a-4f6c-8f52-61577e4ceb30</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>8fb98f1c-3782-432f-9aa5-d94e63232d7f</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>71621b41-467d-4e8f-bc70-ed7c3a2706e4</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>e3e92468-2cbf-45d5-adb6-6e10829a2463</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>f89710fb-31e4-4134-a32d-dafab5c51b6e</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>785646a1-57b1-49ad-a69c-a818bdc48d78</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>c39f7fa2-6f99-4c3c-b6da-a2d19d10e612</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>e2c9a594-862c-46a1-9c2c-b533e238c489</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>c210db12-87e6-469b-a4af-33836702fc5a</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>0a1dfda6-f8fa-43e6-9ce8-474d6c9541ad</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>98c492d4-acf2-49c3-93fb-afc4e6e0422f</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>b466c443-bf05-48ca-b0b2-ff937279b2b0</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>97126eb2-fe6f-4eb2-ab83-6aea1158286b</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>86ccf238-b451-4b21-82f0-215b15405c6c</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>e93c6bf3-fb88-4c8e-9a55-3f87c88dedc9</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>cd36ca87-50d5-4f9c-8b49-7f4b8c5e8e34</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>03b12c31-052c-4bea-b46f-3515f1280f75</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>33f67d20-86ad-4394-9152-040482dbe675</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>b8bbcb08-7083-4c17-b55a-73bde7743e31</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>eaae391a-8c86-4405-86ae-b4730d351f0d</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>e7671504-aaca-4917-996c-c4e9f4d1f1c4</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>5fce1f2c-6cf8-4008-bd57-18afce67404f</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>8be61329-5731-45b8-9857-9468a90baf80</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>21fdc30f-835d-4c90-bb7b-eb5080c6dcef</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>4f4cb9de-a733-4dee-9aba-96980f5e2065</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>665c0980-109b-4651-bb91-dac564531643</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>c65ed911-47f6-435f-864a-b1ab50cde37d</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>7621a2ff-ff45-4924-9e58-7a109c77c1d0</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>92cf358e-7eb3-4a6e-92e1-e2a2da53cd60</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>d9ff9fee-b4da-41e1-89e0-d32841cdebb4</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>27638c9e-b35d-4da3-8738-f30304b89ac9</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>248b72e3-46e0-440e-8e49-e2c826c00c11</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>f473d667-3f76-460a-970c-3adb1001acd1</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>7361ecc0-3cb6-47e4-a7e0-4bf12bd1d8a5</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>6a0bf373-d7a3-4db6-8ac3-e2d01d0a9681</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>18026440-b579-447d-ba80-19a2ecb365ad</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>9eb1a561-1ae2-4982-92c4-1ff968ac538f</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>53658730-a883-4f30-b8f1-a49183015641</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>87e0c275-c5b9-4c98-b6d7-4f26a66b2ba8</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>3ac58b51-5786-49a1-aeb5-395f56f51ac2</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>6065e758-6e9c-4716-bf64-7cdab4e00885</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>588cf8d9-9977-45ab-b1fc-4e2086221e07</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>bb27a447-56db-4619-a428-0b8680728266</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>200ace3b-6031-4bd1-8b48-e77e4f0c1bda</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>a7ecc900-027b-4a29-b52a-588895c7f9e1</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>964d9105-3d03-4900-a971-a5f3ec1cf5b0</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>92f0511d-f00b-40bd-aa6d-06a093c11d94</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>48433e3c-117e-4710-8952-de13210c15f8</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>4e33dcf6-e2d2-46f9-810b-430da4747fd5</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>3fefd59f-cb69-4076-8f69-2f5f4fa92b86</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>aace1443-0e7c-465a-997a-b36c94b32fe1</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>3826688c-703e-49b1-9a00-fb9ae3313c99</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>59bd349c-3b01-4c4b-b1c7-f0e3316cdbd4</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>4c47d72a-4629-40ec-937c-2c4f9eaf8fba</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>73ff6f96-53ec-4a9f-9715-ee4fe16724b9</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>c3765d2a-c0cc-47d5-aaad-ee50afc45b1b</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>0b9b0fd9-a9ea-4b0c-aabc-a559883a4aa7</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>cac1f0eb-dd12-4735-b908-ec1c86130636</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>381681e9-fd6d-4091-9ac1-db51cb163ffd</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>e6bdaa95-f4c5-4c68-a47b-64787492724b</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>3cd71ba6-a567-4510-9935-64aedeb3e93c</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>47cb0786-3693-4a3a-bffb-c27390968b5f</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>d659795c-7818-469c-8ace-1ee1848bd83b</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>0147bdbc-c809-41dd-a845-6d92d5b12a24</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>f3770957-89e4-47cc-9669-156e82db1337</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>376ed6eb-2a3f-42b0-8843-ad3613321db4</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>51afb44c-c284-4446-8d12-999ccec24ef3</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>b0a2cffe-381f-44d4-81ba-dc94ebf3be8a</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>20313da3-423f-4e96-a5e1-eff048136b2d</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>41340120-73b0-417e-ac24-f21146d1514b</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>a61c9330-ffdc-4945-96ee-48a49387e03f</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>3bef24cd-0d2b-4acf-80f9-4251b49b4951</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>6b4d5092-5e9a-4fe3-8de7-f061e87a70d9</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>9c7b3aad-38a5-4c47-9845-920393b2bd24</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>5d41314c-8ee6-4db8-a562-e18e368dd8c9</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>9527eadd-880c-491b-88ee-ef151984a7b0</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>25fb6d40-8c1b-40fa-85b6-5d602cd35f8f</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>1a962d50-779c-42a4-b521-beefbec65821</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>c92dc925-7c9d-4914-8213-77a4462999c6</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>3076ed6e-01ba-4de0-be0c-8763b0f55212</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>6f445379-f1e1-453e-8e44-84be6dbc8b86</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>03de9918-2fac-4705-affd-f36eb9567ed8</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>7f8ce707-1ea0-484d-8ff9-db6801ee4757</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>a4b621bb-099b-4e5d-a527-2bdf2e26cfc0</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>5cd5f12b-32e9-4fd4-b4b3-f143c6455ff3</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>039f82fc-4027-4f2e-990e-50bc99df618c</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>1109527e-75a9-49fb-82da-9f2128432643</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>af1512da-f4d3-46c1-bf13-d4cb01f77730</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>87d3762c-d04d-4a46-b2a8-a46d815ddec2</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>9b0aecb1-d0ee-43f3-842d-d2d99b944ba8</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>0cec7707-9afc-4934-bcbd-e5744f3690cc</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>18bc3dea-4301-46ff-80b3-de283a9e799a</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>de4db903-f38b-4444-92da-7722bdde9d11</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>8ab098c0-83da-4a61-b8f9-0c80883ebe84</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>7e60dcd6-4b78-430d-84a4-d4d0ef186df8</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>3a6e8692-bd30-4557-9724-6be1eb719aee</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>1d6d63f3-5fd2-4b6c-9bec-509f5f9fa017</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>981a2a91-2517-4e0c-ba29-e2afa16e61e1</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>f30647af-3fd5-4a75-ae1d-7207187c527b</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>77f3038f-61a4-48aa-93d9-b08a6269fe82</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>880a1608-4340-489f-bde5-e329f6dbe534</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>0d7bbb97-87a7-409e-b666-779c206dc479</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>bbf4ad55-8661-4725-a20b-c305e1e5294c</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>5790c992-f606-48ad-98fc-55a8a3e24c8d</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>4ec59b24-82db-468d-b0a1-a564b4b632e3</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>919263d4-f82f-4159-a257-bf475da9aced</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>5fbd2c0a-8eaf-433d-a511-98b9e427ffbc</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>05c61887-4b63-4fab-8b75-b8394c5d1b35</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>2bb14935-033c-40cf-b9a0-a3b6291db174</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>48830d4f-85a2-4f79-9667-e43c6b82d17c</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>196c1642-5494-4cf6-90d8-dca7e6f28259</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>889e96f3-a12a-4bec-8c7a-45e6b100ff81</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>a0843298-c967-4074-83be-69fb16e98417</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>e1e4e215-07b0-4ea6-b248-18e5464a37fc</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>8f0cb488-fba2-48df-90e9-fbee3bdde4b6</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>27ad8eae-ce5d-4eb2-bd51-5fc245fcbbcb</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>6e5dc30d-086d-4b4b-ab9b-beb26ed1d4d9</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>1f3b5514-49d5-47e2-9c8f-4dd724ad0d83</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>cc8ab07c-d664-4e6b-b72f-ef6eb5e301e5</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>11a9af26-e827-46a5-b014-4e90d031de22</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>9b396708-ffed-45ba-bed0-dd53c2f3089b</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>85ae4ea3-8d88-48a3-a895-3ac91bb2fce3</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>989faa6f-4fdb-472a-9bcc-e533d3c9a770</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>25b00477-2827-4e7c-bb62-a9944ead8e84</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>515b6f34-e329-4d92-b02c-35a33191eff3</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>44cab01b-6511-4e80-80a8-6fb2e4738d9c</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>9d0f2ca3-65ac-47d3-af12-2a555d6fb363</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>b77b4560-6eb9-46a8-bbab-f6fbc9b2afa2</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>c71978f1-b799-4bad-bd86-3b19125d382d</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>8a587af4-05a5-4baa-9e29-b58328685b56</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:environmentSpec>
    <con:entry environmentId="266625f2-0734-4c67-922f-44c12c1e96c3">
      <con:authProfile>Inherit From Parent</con:authProfile>
    </con:entry>
    <con:entry environmentId="ff76c282-7c43-48ac-88d6-a00107f279b7">
      <con:authProfile>Inherit From Parent</con:authProfile>
    </con:entry>
  </con:environmentSpec>
</con:testCase>
